Add-Type -AssemblyName PresentationFrameworkAdd-Type -AssemblyName PresentationFramework
Add-Type -AssemblyName System.Drawing

[void] [System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
[void] [System.Reflection.Assembly]::LoadWithPartialName("System.Drawing")

[System.Windows.Forms.Application]::EnableVisualStyles()

#Removendo possíveis variáveis salvas

Remove-Variable * -ErrorAction SilentlyContinue



#Removendo lixo eletrônico do conteudo do programa.

if (test-path "x:\windows\system32\format.txt") {
remove-item -force "x:\windows\system32\format.txt"
}

if (test-path "x:\windows\system32\apply.txt") {
remove-item -force "x:\windows\system32\apply.txt"
}

if (test-path "x:\windows\system32\reset.txt") {
remove-item -force "x:\windows\system32\reset.txt"
}

if (test-path "x:\windows\system32\dismlog.txt") {
remove-item -force "x:\windows\system32\dismlog.txt"
}


#Formulario principal

$FORM = New-Object System.Windows.Forms.Form 
$FORM.Text = "Imagem v9.0"
$FORM.Size = New-Object System.Drawing.Size(400,140) 
$FORM.StartPosition = "CenterScreen"
$FORM.FormBorderStyle = 'FixedDialog'
$form.MaximizeBox = $false
$form.Add_KeyDown({if ($_.KeyCode -eq "Escape") { $form.Close()} })
$form.KeyPreview= $True

#Label referente a informação do conteúdo do que está sendo execcutado no momento.

$Labelimg = New-Object System.Windows.Forms.Label
$labelimg.Font  = [System.Drawing.Font]::new("Microsoft Sans Serif", 9, [System.Drawing.FontStyle]::Bold)
$Labelimg.Text = "Preparando    ... "
$Labelimg.Location = New-Object System.Drawing.Point(70, 10)
$Labelimg.Width = 190
$Labelimg.Height = 20
$labelimg.backcolor = 'transparent'
$Labelimg.visible = $false
$Labelimg.ForeColor = 'red'
$form.Controls.Add($Labelimg)

# Imagem de loading 

$Imgloading = new-object Windows.Forms.PictureBox
$img2 = [System.Drawing.Image]::Fromfile("x:\windows\system32\loading.gif")
$Imgloading.visible=$false
$imgloading.backcolor = 'Transparent'
$Imgloading.Location = New-Object System.Drawing.Point(150,25)
$Imgloading.size = New-Object System.Drawing.Point(70,50)
$Imgloading.image = $img2
$form.controls.add($Imgloading)




#Label de porcentagem

$lblpc = new-object System.Windows.Forms.label
$lblpc.Location = new-object System.Drawing.Size(345,15)
$lblpc.Size = new-object System.Drawing.Size(150,20)
$lblpc.visible = $false
$lblpc.text = "0.0%"
$lblpc.backcolor = 'transparent'
$lblpc.Font  = [System.Drawing.Font]::new("Arial ",9)
$FORM.controls.add($lblpc )

#Label de autoria do projeto.

$lblautoria = new-object System.Windows.Forms.label
$lblautoria.Location = new-object System.Drawing.Size(245,75)
$lblautoria.Size = new-object System.Drawing.Size(150,30)
$lblautoria.visible = $true
$lblautoria.enabled= $false
$lblautoria.backcolor = 'transparent'
$lblautoria.text = "Criado por:                                     Luiz Gustavo Queroga dos Santos    luizsantos.ti@outlook.com"
$lblautoria.Font  = [System.Drawing.Font]::new("Arial ",7)
$FORM.controls.add($lblautoria)



#Label do temporizador do reset da maquina após término.

$LabelTime = New-Object System.Windows.Forms.Label
$LabelTime.Font  = [System.Drawing.Font]::new("Microsoft Sans Serif", 7)
$LabelTime.Location = New-Object System.Drawing.Point(260, 13)
$LabelTime.backcolor = 'transparent'
$LabelTime.Width = 100
$LabelTime.Height = 20
$LabelTime.visible = $false

$form.Controls.Add($LabelTime)

#Label da informação STATUS:

$Labelstatus = New-Object System.Windows.Forms.Label
$Labelstatus.Font  = [System.Drawing.Font]::new("Microsoft Sans Serif", 10, [System.Drawing.FontStyle]::Bold)
$Labelstatus.Text = "Status:"
$labelstatus.backcolor = 'transparent'
$Labelstatus.Location = New-Object System.Drawing.Point(10, 10)
$Labelstatus.Width = 60
$Labelstatus.Height = 20
$Labelstatus.visible = $false


$form.Controls.Add($Labelstatus)


#Botão para Localizar o arquivo .wim


$WimButton = New-Object System.Windows.Forms.Button
$WimButton.Location = New-Object System.Drawing.Size(308,40)
$WimButton.Size = New-Object System.Drawing.Size(75,23)
$WimButton.Text = "Procurar"
$WimButton.enabled = $true
$WimButton.backcolor = 'White'
$FORM.Controls.Add($WimButton)



#Botão START

$BtnIniciar = New-Object System.Windows.Forms.Button
$BtnIniciar.Location = New-Object System.Drawing.Size(150,75)
$BtnIniciar.Size = New-Object System.Drawing.Size(75,27)
$BtnIniciar.Text = "Iniciar"
$BtnIniciar.enabled = $false
$BtnIniciar.Font  = [System.Drawing.Font]::new("Arial ",9)
$FORM.Controls.Add($BtnIniciar)




#Textbox para receber o caminho do arquivo .wim

$TextWim = new-object System.Windows.Forms.Textbox
$TextWim.Location = new-object System.Drawing.Size(10,42)
$TextWim.Size = new-object System.Drawing.Size(290,20)
$TextWim.Text = ''
$TextWim.autosize = $false
$TextWim.WordWrap = $true
$TextWim.ReadOnly = $TRUE
$TextWim.backcolor = 'White'
$TextWim.TabIndex = '2'
$TextWim.Font  = [System.Drawing.Font]::new("Arial ",8)

$FORM.controls.add($TextWim)


#Label informando para localizar o conteudo do arquivo WIM.

$lblWIM = new-object System.Windows.Forms.label
$lblWIM.Location = new-object System.Drawing.Size(10,10)
$lblWIM.Size = new-object System.Drawing.Size(310,18)
$lblWIM.Text = 'Informe o caminho da imagem [.wim]'
$lblwim.backcolor = 'transparent'
$lblwim.forecolor = 'black'
$lblWIM.Font  = [System.Drawing.Font]::new("Arial",10, [System.Drawing.FontStyle]::Bold)
$FORM.controls.add($lblWIM)
$FORM.Add_Shown({$FORM.Activate()})



# Condição caso o formulário seja fechado.

if ($image -eq [System.Drawing.Font]::Cancel) {
$null

}



# Função para obter o caminho do arquivo .wim GetfileBrowser, 

 Function Get-Filewim  {

$Foldername = New-Object System.Windows.Forms.OpenFileDialog -Property @{ 
    InitialDirectory = [Environment]::GetFolderPath('Desktop') 
     Filter = 'Imagem (*.WIM)|*.wim'
     AUtoUpgradeEnabled = $false
     

}

if ($Foldername.ShowDialog() -eq 'OK'){

return $Foldername.filename
    }
}



#Clicando no botao de procurar arquivo WIM

$WimButton.add_click{

$Getwim = get-filewim

if ($getwim -eq $null) {

} else {


$TextWim.Text = "$Getwim"
"$Getwim" > 'x:\windows\system32\local.txt'
$BtnIniciar.backcolor = 'White'
$BtnIniciar.enabled = $true
    }

}



# Função utilizada para iniciar ao clicar no botão START.

Function Applyimg() {

    $ProgressBarm = New-Object System.Windows.Forms.ProgressBar
    $ProgressBarm.Location = New-Object System.Drawing.Point(10, 40)
    $ProgressBarm.Size = New-Object System.Drawing.Size(375, 20)
    $ProgressBarm.Style = "Marquee"
    $ProgressBarm.visible = $false
    $progressbarm.backcolor = 'black'
    $ProgressBarm.MarqueeAnimationSpeed = 20
    $form.Controls.Add($ProgressBarm)

$ProgressBar = New-Object System.Windows.Forms.ProgressBar
$ProgressBar.Location = New-Object System.Drawing.Point(10, 40)
$ProgressBar.Size = New-Object System.Drawing.Size(375, 20)
$ProgressBar.Maximum = 100
$ProgressBar.visible = $false
$form.Controls.Add($ProgressBar)


$form.refresh()

$btniniciar.enabled = $false
$btniniciar.backcolor = ''

start-job -name job -scriptblock{



$getwim = gc('x:\windows\system32\local.txt')

#preparando VHD apenas para TESTES

diskpart /s "x:\windows\system32\vhd.txt"


"teste" > x:\windows\system32\format.txt

diskpart /s x:\windows\system32\imagem.txt


start-sleep 6

"apply" > x:\windows\system32\apply.txt

Dism /apply-Image /ImageFile:"$GetWim" /index:1 /applyDir:W:\ >> x:\windows\system32\dismlog.txt


start-sleep 1

}


$count = 105
$Imgloading.visible = $true
$Labelstatus.visible = $true
$Labelimg.visible = $true

Loop
}   





#Clicando no botao paara iniciar Formatação

$BtnIniciar.add_click( { Applyimg })


#Função loop utilizada para uso do cáculo da porcentagem e alteração do label LabelIMG

function Loop(){

# Após iniciar a função applyimg é chamada a função loop para desabilitar e habilitar a próxima tela.


$TextWim.visible = $false
$BtnIniciar.visible = $false
$WimButton.visible = $false
$lblWIM.visible = $false

[System.Windows.Forms.Application]::DoEvents()


# Definindo variaveis de cáculo.

$totalline = 6
$i = 0
$ProgressBar.Value = 0



#Loop While utilizado para contagem real da porcentagem.

while($i -le $count){

$form.refresh()



start-sleep -milliseconds 50



 if (test-path "x:\windows\system32\format.txt"){ 

 $Labelimg.text = "Formatando disco   . . . "

$Imgloading.visible = $false
$ProgressBarm.visible = $true

 }  

 
  if (test-path "x:\windows\system32\apply.txt"){ 

   if (test-path "x:\windows\system32\format.txt"){ 

remove-item -force "x:\windows\system32\format.txt"

$Labelimg.text = "Aplicando Imagem . . ."
$lblpc.visible = $true
 }  

 $ProgressBar.visible = $true
 $ProgressBarm.visible = $false



  #checando novamente se existe o aquivo imagemO365.txt

 if (test-path "x:\windows\system32\format.txt"){ 

remove-item -force "x:\windows\system32\format.txt"


 }


#Loop while utilizado para iniciar a aplicação da imagem apenas quando o dism tiver rodando.
 
while (-not(test-path "x:\windows\system32\dismlog.txt")){

start-sleep -milliseconds 150



}

 

# Inicio das condições do calculos

$line = Get-Content "x:\windows\system32\dismlog.txt" -tail 1


$countline = get-content("x:\windows\system32\dismlog.txt")


 if ($countline.count -eq "204") {

 $count++

 $ProgressBar.Value = 100
 
 $i++
 $lblpc.text = "100.0%"
 $ProgressBar.PerformStep()
[System.Threading.Tasks.Task]::Delay(30).GetAwaiter().GetResult()
 $form.refresh()

 if ($count -eq 110){
 
 $count = 98
 
 }

  [System.Windows.Forms.Application]::DoEvents()
 
 }


if($countline.count -lt "204") {


 if ($countline.count -ge $TotalLine) {

$i++
$TotalLine = $totalline + 2
$ProgressBar.Value = $i

[System.Threading.Tasks.Task]::Delay(50).GetAwaiter().GetResult()
$form.refresh
[System.Windows.Forms.Application]::DoEvents()
 }
  }


if ( $line[0] -ne "["){



} else {





$lblpc.text = $line.substring(28,5)
[System.Windows.Forms.Application]::DoEvents()
}




	} 
  } 

 # Atualizando as informações finais do processo de porcentagem.

 $ProgressBar.Value = 100
 $lblpc.text = "100.0%"


 start-sleep 2

 $form.refresh()



 start-job -name Boot -scriptblock{ 

  W:\Windows\system32\bcdboot W:\windows /s S: /f all 
  
   }


  $Labelimg.text = "Criando Boot do Windows    ... "

  $ProgressBarm.visible = $true
  $ProgressBar.visible = $false
  $lblpc.visible = $false
  $form.refresh()

   
 foreach($time in 1..200){

 start-sleep -milliseconds 10
 $time
 [System.Windows.Forms.Application]::DoEvents()
}


 $Labelimg.text = "Reiniciando o computador    ... "

 $LabelTime.visible = $true
 $form.refresh()


 #Loop utilizando para contagem de 10 segundos.

 foreach($time in 1..300){
  $time
 start-sleep -milliseconds 27

  if ($time -eq 30) {

 $LabelTime.text = "( 10 segundos )"
 $time
 }

 if ($time -eq 60) {

 $LabelTime.text = "( 9 segundos )"
 $time
 }

  if ($time -eq 90) {
  $time
 $LabelTime.text = "( 8 segundos )"
 }

  if ($time -eq 120) {
  $time
 $LabelTime.text = "( 7 segundos )"
 }

  if ($time -eq 150) {
  $time
 $labeltime.text = "( 6 segundos )"
 }

  if ($time -eq 180) {
  $time
 $labeltime.text = "( 5 segundos )"
 }

  if ($time -eq 210) {
  $time
 $labeltime.text = "( 4 segundos )"
 }

  if ($time -eq 240) {
  $time
 $labeltime.text = "( 3 segundos )"
 }

  if ($time -eq 270) {
  $time
 $labeltime.text = "( 2 segundos )"
 }

   if ($time -eq 300) {
   $time
 $labeltime.text = "( 1 segundo )"
 }



 [System.Windows.Forms.Application]::DoEvents()
}


$form.refresh()
start-sleep 1

#Após finalizar a aplicação da imagem o winpe ira reiniciar a maquina.

wpeutil reboot


$form.close()

}


# Iniciando Formulario

$image = $FORM.ShowDialog()


